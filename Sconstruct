# vim: expandtab:shiftwidth=4:fileencoding=utf-8:filetype=python :

# Copyright Â® 2008 Fulvio Satta
#
# If you want contact me, send an email to Yota_VGA@users.sf.net
#
# This file is part of Cassata
#
# Cassata is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Cassata is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import os

src = ['main.cpp', 'Image.cpp', 'DefaultRender.cpp', 'PinholeCamera.cpp', \
        'BlackMaterial.cpp', 'Material.cpp', 'PointGeometry.cpp', \
        'Geometry.cpp', 'Triangle.cpp', 'GeometryCollector.cpp', \
        'DiffuseMaterial.cpp', 'Constants.cpp', 'MaterialSum.cpp']

opts = Options('options.py')
opts.Add(BoolOption('DEBUG', 'If true the targets are build in debug mode', \
        False))
opts.Add('CXXFLAGS', 'C++ compiler flags', '-O2')
opts.Add('LINKFLAGS', 'Linker flags', '')

env = Environment(options  = opts, \
                  tools    = ['default', 'colors', 'defmessages'], \
                  toolpath = ['tools'])

Help("""Use one or more of the subsequent targets:
\tcassata\t\tbuild the cassata executables [this is the default if no targets \
are specified on the command line]
\ttestcls\t\tbuild the testcls to test the classes (not yet supported!)
\tdoc\t\tgenerate the documentation\t

For example:
\tscons cassata doc

Use the subesequent options for change the default beavoir of the script \
in the format OPTION=VALUE on the command line, or write many lines in the \
format OPTION = 'VALUE' on options.py (create it in the main dir if it don't \
exist).

For example:
\tscons QMAKE=qmake-qt4 cassata

Options:
""" + opts.GenerateHelpText(env))

if env['DEBUG']:
    env['CXXFLAGS'] = Split(env['CXXFLAGS'])
    env.Append(CXXFLAGS = '-g')

builddir = os.path.join('build', 'release')
if env['DEBUG']:
    builddir = os.path.join('build', 'debug')

env.BuildDir(builddir, 'src')

env.ParseConfig('pkg-config OpenEXR --cflags --libs')

cassata = env.Program(os.path.join(builddir, 'cassata'), \
                      map(lambda s: os.path.join(builddir, s), src))

Default(cassata)
env.Alias('cassata', cassata)

docenv = env.Command([Dir(os.path.join(builddir, 'doc', 'cassata'))], \
        ['Doxyfile_cassata'] + src, \
        [Delete(os.path.join('build', 'doc', 'cassata')), \
        Mkdir(os.path.join('build', 'doc', 'cassata')), \
        Action('doxygen Doxyfile_cassata', cmdstr = '$DOCCOMSTR')])

doc = env.Alias('doc', docenv)
env.Clean(doc, os.path.join('build', 'doc'))
